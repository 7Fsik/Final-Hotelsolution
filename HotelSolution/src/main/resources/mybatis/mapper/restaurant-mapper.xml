<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="restaurant">

<select id="getItemList" resultType="RItemVo">

	SELECT
	M.ITEM_NO,
	M.TYPE_NO,
	M.TEAM_NO,
	M.NAME,
	M.COUNT,
	M.PRICE,
	T.NAME AS TYPE_NAME
	FROM ITEM_MANAGER  M
	JOIN ITEM_TYPE T ON T.ITEM_TYPE_NO = M.TYPE_NO
	<where>
		M.TEAM_NO = 3
		<if test="searchTypeSelect == 2">
				AND M.TYPE_NO = #{searchValueSelect}
		</if>
		<if test="searchTypeSelect == 1">
				AND M.NAME LIKE ('%'||#{searchValueInput}||'%')
		</if>
	</where>

</select>

<update id="edit">
	UPDATE ITEM_MANAGER 
	SET COUNT = #{count}
	WHERE ITEM_NO= #{itemNo}
</update>



<select id="getMonthSales" resultType="hashmap">
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[0]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[0]} AND PRICE_YN='Y'
    UNION ALL
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[1]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[1]} AND PRICE_YN='Y'
    UNION ALL
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[2]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[2]} AND PRICE_YN='Y'
    UNION ALL
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[3]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[3]} AND PRICE_YN='Y'
    UNION ALL
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[4]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[4]} AND PRICE_YN='Y'
    UNION ALL
    SELECT NVL(SUM(TOTAL_PRICE), 0) AS MONTH_SALES
    FROM RESTAURANT_BOOK_LIST
    WHERE EXTRACT(YEAR FROM USE_TIME) = #{years[5]} AND EXTRACT(MONTH FROM USE_TIME) = #{months[5]} AND PRICE_YN='Y'
</select>


<select id="getDaySales" resultType="DaySalesVo">

	SELECT 
	    TO_CHAR(TRUNC(USE_TIME), 'YYYY-MM-DD') AS DAY,
	    SUM(TOTAL_PRICE) AS TOTAL_PRICE
	FROM 
	    RESTAURANT_BOOK_LIST
	WHERE
	    PRICE_YN = 'Y'
	GROUP BY 
	    TO_CHAR(TRUNC(USE_TIME), 'YYYY-MM-DD')
	ORDER BY 
	    TO_CHAR(TRUNC(USE_TIME), 'YYYY-MM-DD') ASC

</select>


<select id="menuList" resultType="MenuVo">

	SELECT 
	M.FOOD_NO
	,M.NAME
	,M.PAY
	,M.FOOD_TYPE
	,T.FOOD_TYPE AS TYPE_NAME
	FROM FOOD_MENU M
   	JOIN FOOD_TYPE T ON M.FOOD_TYPE = T.NO
	<where>
		<if test="searchType == 2 and searchValue !=''">
			M.NAME LIKE ('%'||#{searchValue}||'%')
		</if>
		<if test="searchType == 1">
			M.FOOD_TYPE = #{selectValue}
		</if>
	</where>
	

</select>

<update id="menuEdit">

	UPDATE FOOD_MENU SET NAME = #{menuName} , PAY=#{menuPay}
	WHERE FOOD_NO = #{foodNo}

</update>

<delete id="menuRemove">

	DELETE FROM FOOD_MENU WHERE FOOD_NO = #{foodNo}
	
</delete>

<insert id="plusMenu">
	
	INSERT INTO FOOD_MENU (FOOD_NO,FOOD_TYPE,NAME,PAY)
	VALUES(SEQ_FOOD_MENU_NO.NEXTVAL,#{menuType},#{menuName},#{menuPrice})

</insert>



	
	


</mapper>
